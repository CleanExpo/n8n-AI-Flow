version: '3.8'

services:
  # PostgreSQL Database for n8n
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8n_password
      POSTGRES_DB: n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n"]
      interval: 10s
      timeout: 5s
      retries: 5

  # n8n Server
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5678:5678"
    environment:
      # Database Configuration
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: n8n
      DB_POSTGRESDB_PASSWORD: n8n_password
      
      # n8n Configuration
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: admin123
      N8N_HOST: localhost
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      WEBHOOK_URL: http://localhost:5678/
      
      # Execution Configuration
      EXECUTIONS_PROCESS: main
      EXECUTIONS_TIMEOUT: 600
      EXECUTIONS_TIMEOUT_MAX: 3600
      
      # Security
      N8N_ENCRYPTION_KEY: n8n_encryption_key_change_this
      
      # API Configuration
      N8N_API_ENABLED: "true"
      N8N_API_PREFIX: /api
      
      # Editor
      N8N_EDITOR_BASE_URL: http://localhost:5678/
      
      # Timezone
      GENERIC_TIMEZONE: America/New_York
      TZ: America/New_York
      
      # Performance
      N8N_METRICS: "true"
      
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-files:/files
    command: n8n start

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  n8n_data:
  redis_data: